{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHABET","SORT_BY_LENGTH","App","useState","sortFilter","setSortFilter","doReverse","setDoReverse","reset","setReset","resetOffByReverse","setResetOffByReverse","sortGoods","goods","copyOfGoods","sort","good1","good2","localeCompare","length","reverse","sortList","className","type","cn","onClick","map","good","index","ReactDOM","render","document","getElementById"],"mappings":"mPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAmB,WACnBC,EAAiB,SAyBhB,IAAMC,EAAM,WACjB,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA0BJ,oBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAkDN,oBAAS,GAA3D,mBAAOO,EAAP,KAA0BC,EAA1B,KAEMC,EA7BR,SAAkBC,EAAlB,GAAqD,IAA1BT,EAAyB,EAAzBA,WAAYE,EAAa,EAAbA,UAC/BQ,EAAW,YAAOD,GAmBxB,OAjBIT,GACFU,EAAYC,MAAK,SAACC,EAAOC,GACvB,OAAQb,GACN,KAAKJ,EACH,OAAOgB,EAAME,cAAcD,GAC7B,KAAKhB,EACH,OAAOe,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,SAKXb,GACFQ,EAAYM,UAGPN,EASWO,CAAStB,EAAiB,CAAEK,aAAYE,cAE1D,OACE,mCACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYpB,IAAeJ,IAE7ByB,QAAS,WACPpB,EAAcL,GACdS,GAAS,IAPb,iCAaA,wBACEc,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYpB,IAAeH,IAE7BwB,QAAS,WACPpB,EAAcJ,GACdQ,GAAS,IAPb,4BAaA,wBACEc,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,YAAalB,IAEfmB,QAAS,WACPlB,GAAcD,GACdK,GAAqB,GAEjBD,GACFC,GAAqB,IAV3B,qBAiBCH,GAASE,EACR,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPpB,EAAc,IACdI,GAAS,GACTF,GAAa,GACbI,GAAqB,IAPzB,mBAYE,QAGN,6BACGC,EAAUc,KAAI,SAACC,EAAMC,GAAP,OACb,oBACE,UAAQ,OADV,SAGGD,eCtHfE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ee967a63.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport 'bulma/css/bulma.css';\nimport { useState } from 'react';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABET = 'alphabet';\nconst SORT_BY_LENGTH = 'length';\n\nfunction sortList(goods, { sortFilter, doReverse }) {\n  const copyOfGoods = [...goods];\n\n  if (sortFilter) {\n    copyOfGoods.sort((good1, good2) => {\n      switch (sortFilter) {\n        case SORT_BY_ALPHABET:\n          return good1.localeCompare(good2);\n        case SORT_BY_LENGTH:\n          return good1.length - good2.length;\n        default:\n          return null;\n      }\n    });\n  }\n\n  if (doReverse) {\n    copyOfGoods.reverse();\n  }\n\n  return copyOfGoods;\n}\n\nexport const App = () => {\n  const [sortFilter, setSortFilter] = useState('');\n  const [doReverse, setDoReverse] = useState(false);\n  const [reset, setReset] = useState(false);\n  const [resetOffByReverse, setResetOffByReverse] = useState(false);\n\n  const sortGoods = sortList(goodsFromServer, { sortFilter, doReverse });\n\n  return (\n    <>\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={cn('button is-info', {\n              'is-light': sortFilter !== SORT_BY_ALPHABET,\n            })}\n            onClick={() => {\n              setSortFilter(SORT_BY_ALPHABET);\n              setReset(true);\n            }}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn('button is-success', {\n              'is-light': sortFilter !== SORT_BY_LENGTH,\n            })}\n            onClick={() => {\n              setSortFilter(SORT_BY_LENGTH);\n              setReset(true);\n            }}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn('button is-info', {\n              'is-light': !doReverse,\n            })}\n            onClick={() => {\n              setDoReverse(!doReverse);\n              setResetOffByReverse(true);\n\n              if (resetOffByReverse) {\n                setResetOffByReverse(false);\n              }\n            }}\n          >\n            Reverse\n          </button>\n\n          {reset || resetOffByReverse ? (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setSortFilter('');\n                setReset(false);\n                setDoReverse(false);\n                setResetOffByReverse(false);\n              }}\n            >\n              Reset\n            </button>\n          ) : null}\n        </div>\n\n        <ul>\n          {sortGoods.map((good, index) => (\n            <li\n              data-cy=\"Good\"\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}